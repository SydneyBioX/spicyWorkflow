mkdir("Data")
dir.create("Data")
pathToImages <- "/dski/nobackup/biostat/datasets/spatial/Risom2022_BreastCancer_IMC/data/Imaged_Data/raw_tifs_masks"
dir(pathToImages)
patients <- dir(pathToImages)
patients <- patients[-grep("Normal",patients)]
patients <- patients[-grep("Tonsil",patients)]
patients
dir.create(paste0("Data/",patients))
sapply(paste0("Data/",patients),dir.create)
?file.copy
pathToImages
file.copy(paste0(pathToImages[1],"/",TIFs,"/*"),paste0("Data/",patients)[1])
paste0(pathToImages[1],"/",TIFs,"/*")
file.copy(paste0(pathToImages[1],"/","TIFs/*"),paste0("Data/",patients)[1])
file.copy(paste0(pathToImages[1],"/","TIFs/AR.tif"),paste0("Data/",patients)[1])
file.copy(paste0(pathToImages[1],"/",patients[1],"/TIFs/*"),paste0("Data/",patients)[1])
file.copy(paste0(pathToImages[1],"/",patients[1],"/TIFs/AR.tif"),paste0("Data/",patients)[1])
patient = patients[1]
list.files(paste0(pathToImages,"/",patients,"/TIFs"))
list.files(paste0(pathToImages,"/",patient,"/TIFs"))
files <- list.files(paste0(pathToImages,"/",patient,"/TIFs"))
paste0(pathToImages,"/",patient,"/TIFs/", files)
file.copy(paste0(pathToImages,"/",patient,"/TIFs/", files),paste0("Data/",patient))
files
tmp <- sapply(patients, function(patient){
files <- list.files(paste0(pathToImages,"/",patient,"/TIFs"))
file.copy(paste0(pathToImages,"/",patient,"/TIFs/", files),paste0("Data/",patient))
})
cells <- read.csv("/dski/nobackup/biostat/datasets/spatial/Risom2022_BreastCancer_IMC/data/Single_Cell_Data.csv")
head(cells)
sapply(cells, function(x)length(unique(x)))
length(patients)
uCols <- sapply(cells, function(x)length(unique(x)))
uCols <- uCols[uCols < 80]
uCols
dim(cells)
files
img <- EBImage::readImage(paste0(pathToImages,"/",patient,"/TIFs/", files))
img
dimnames(img)
??tiff
library(EBImage)
??tiff
?writeImage
getwd()
writeImage(img)
writeImage(img, "img.tiff")
writeImage(img, "img.tiff", compression = "LZW")
files <- list.files(paste0(pathToImages,"/",patient,"/TIFs"))
img <- EBImage::readImage(paste0(pathToImages,"/",patient,"/TIFs/", files))
img <- img[,,!dimnames(img)[3]%in%c("Au", "Aumask", "Background", "C", "Ca40")]
writeImage(img, "img.tiff")
writeImage(img, "img.tiff", compression = "LZW")
img
dimnames(img)
img <- img[,,!dimnames(img)[[3]]%in%c("Au", "Aumask", "Background", "C", "Ca40")]
writeImage(img, "img.tiff", compression = "LZW")
tmp <- sapply(patients, function(patient){
files <- list.files(paste0(pathToImages,"/",patient,"/TIFs"))
img <- EBImage::readImage(paste0(pathToImages,"/",patient,"/TIFs/", files))
img <- img[,,!dimnames(img)[[3]]%in%c("Au", "Aumask", "Background", "C", "Ca40")]
writeImage(img, paste0("Data/images/", patient, ".tiff"), compression = "LZW")
})
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(cytomapper)
?loadImages
pathToImages <- "Data/images"
images <- loadImages(pathToImages, "tiff")
images
clinical <- read.csv("Data/1-s2.0-S0092867421014860-mmc1.csv")
head(clinical)
clinical <- clinical |>
mutate(imageID = paste(PointNumber, Patient_ID, TMAD_Patient, sep = "_"))
library(dplyr)
clinical <- clinical |>
mutate(imageID = paste(PointNumber, Patient_ID, TMAD_Patient, sep = "_"))
clinical$imageID %in% names(images)
names(images)
clinical$imageID
clinical <- clinical |>
mutate(imageID = paste0("Point", PointNumber, "_", Patient_ID, "_", TMAD_Patient))
clinical$imageID %in% names(images)
clinical$imageID
names(images)
clinical <- clinical |>
mutate(imageID = paste0("Point", PointNumber, "_pt", Patient_ID, "_", TMAD_Patient))
clinical$imageID %in% names(images)
length(clinical$imageID)
length(images)
sum(clinical$imageID %in% names(images))
names(images)%in%clinical$imageID
names(images)
grep("6202", clinical$PointNumber)
clinical[grep("6202", clinical$PointNumber),1:6[]
clinical[grep("6202", clinical$PointNumber),1:6]
clinical[grep("1026", clinical$Patient_ID),1:6]
clinical[grep("1027", clinical$Patient_ID),1:6]
file.rename("Data/images/Point6202_pt1027_20594.tiff", "Data/images/Point6202_pt1026_20594.tiff")
images <- loadImages(pathToImages, "tiff")
names(images)%in%clinical$imageID
clinica[1:2,]
clinical[1:2,]
clinicalVariables <- c("Status", "Age", "SUBTYPE", "PAM50", "Treatment", "DCIS_grade", "Necrosis")
clinicalVariables <- c("Status", "Age", "SUBTYPE", "PAM50", "Treatment", "DCIS_grade", "Necrosis")
clinical[, clinicalVariables]
clinicalVariables <- c("imageID","Status", "Age", "SUBTYPE", "PAM50", "Treatment", "DCIS_grade", "Necrosis")
clinical[, clinicalVariables]
clinicalVariables <- c("imageID", "Patient_ID","Status", "Age", "SUBTYPE", "PAM50", "Treatment", "DCIS_grade", "Necrosis")
clinical[, clinicalVariables]
clinical[match(clinical$imageID, names(images)), clinicalVariables]
clinical[match(names(images), clinical$imageID), clinicalVariables]
rowames(clinical) <- clinical$imageID
rownames(clinical) <- clinical$imageID
clinical <- clinical[names(images), ]
dim(clinical)
dim(images)
length(images)
clinical
clinical[, clinicalVariables]
display(images[[1]])
images[[1]]
?scale
?cytomapper::normalize
images <- normalize(images, separateImages = TRUE)
display(images[[1]][,,1])
display(images[[1]][,,2])
hist(images[[1]][,,2])
display(sqrt(images[[1]][,,2]))
display(sqrt(images[[1]][,,3]))
display(sqrt(images[[1]][,,4]))
display(sqrt(images[[1]][,,5]))
display(sqrt(images[[1]][,,6]))
display(sqrt(images[[1]][,,7]))
display(sqrt(images[[1]][,,8]))
display(apply(sqrt(images[[1]]), c(1,2), mean))
x = apply(sqrt(images[[1]]), c(1,2), mean)
dim(x)
x
hist(x)
hist(sqrt(x))
display(sqrt(x))
display(sqrt(x)>0)
devtools::install_github("SydneyBioX/simpleSeg")
library(simpleSeg)
?normalize
dimnames(images)
images
dimnames(images[[1]])
images[[1]]
dimnames(images[[1]])
images[[1]]@.Data
dimnames(images[[1]]@.Data)
images <- loadImages(pathToImages, "tiff")
dimnames(images[[1]])
images@metadata
images[[1]][1:4,1:4,1:4]
dimnames(images[[1]][1:4,1:4,1:4])
images
images@int_metadata
images@listData
images@elementType
images@elementMetadata
images[[1]]
images[[1]]@.Data
dim(images[[1]]@.Data)
dimnames(images[[1]]@.Data)
x = readImage("Data/images/Point2203_pt1072_31606.tiff")
dimnames(x)
?writeImage
?tiff
img
dimnames(img)
writeImage(img)
writeImage(img, file = "img.tiff")
y = readImage("img.tiff")
y
dimnames(y)
write.csv(dimnames(img)[3], file = "Data/images/channelNames.csv")
?loadImages
savehistory("/dski/nobackup/biostat/datasets/spatial/spicyWorkflow/hist.Rhistory")
