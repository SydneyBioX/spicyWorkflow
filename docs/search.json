[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/spicyWorkflow.html","id":"version-info","dir":"Articles","previous_headings":"","what":"Version Info","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"R version: R version 4.3.0 alpha (2023-03-29 r84123) Bioconductor version: 3.17 Understanding interplay different types cells immediate environment critical understanding mechanisms cells function context human diseases. Recent advances high dimensional situ cytometry technologies fundamentally revolutionised ability observe complex cellular relationships providing unprecedented characterisation cellular heterogeneity tissue environment. developed analytical framework analysing data high dimensional situ cytometry assays including CODEX, CycIF, IMC High Definition Spatial Transcriptomics. Implemented R, framework makes use functionality Bioconductor packages spicyR, lisaClust, treekoR, FuseSOM, simpleSeg ClassifyR. provide overview key steps needed interrogate comprehensive spatial information generated exciting new technologies including cell segmentation, feature normalisation, cell type identification, micro-environment characterisation, spatial hypothesis testing patient classification. Ultimately, modular analysis framework provides cohesive accessible entry point spatially resolved single cell data analysis R-based bioinformatics.","code":""},{"path":"/articles/spicyWorkflow.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"install current release spicyWorkflow, run following code.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"spicyWorkflow\")"},{"path":"/articles/spicyWorkflow.html","id":"loading-r-packages","dir":"Articles","previous_headings":"","what":"Loading R packages","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"","code":"library(cytomapper) library(dplyr) library(ggplot2) library(simpleSeg) library(FuseSOM) library(ggpubr) library(scater) library(spicyR) library(ClassifyR) library(lisaClust)"},{"path":"/articles/spicyWorkflow.html","id":"global-paramaters","dir":"Articles","previous_headings":"","what":"Global paramaters","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"convenient set number cores running code parallel. Please choose number appropriate resources.","code":"nCores <- max(parallel::detectCores() - 1, 1) BPPARAM <- simpleSeg:::generateBPParam(nCores)  theme_set(theme_classic())"},{"path":"/articles/spicyWorkflow.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"following re-analyse MIBI-TOF data (Risom et al, 2022) profiling spatial landscape ductal carcinoma situ (DCIS), pre-invasive lesion thought precursor invasive breast cancer (IBC). key conclusion manuscript (amongst others) spatial information cells can used predict disease progression patients. use spicy workflow make similar conclusion. R code analysis available github https://github.com/SydneyBioX/spicyWorkflow. mildly processed version data used manuscript available repository.","code":""},{"path":"/articles/spicyWorkflow.html","id":"read-in-images","dir":"Articles","previous_headings":"","what":"Read in images","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"images stored images folder within data folder. use loadImages() cytomapper package load tiff images CytoImageList object store images h5 file -disk.","code":"pathToImages <- system.file(\"extdata/images\", package = \"spicyWorkflow\")  # Store images in a CytoImageList with images on_disk as h5 files to save memory. images <- cytomapper::loadImages(   pathToImages,   single_channel = TRUE,   on_disk = TRUE,   h5FilesPath = HDF5Array::getHDF5DumpDir(),   BPPARAM = BPPARAM ) gc() ##            used  (Mb) gc trigger   (Mb) max used  (Mb) ## Ncells 11340591 605.7   19359011 1033.9 14908772 796.3 ## Vcells 18692386 142.7   33938162  259.0 23445664 178.9"},{"path":"/articles/spicyWorkflow.html","id":"load-the-clinical-data","dir":"Articles","previous_headings":"","what":"Load the clinical data","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"associate features image disease progression, important read information links image identifiers progression status. , making sure imageID match. ## Read clinical data","code":"# Read in clinical data, manipulate imageID and select columns clinical <- read.csv(   system.file(     \"extdata/1-s2.0-S0092867421014860-mmc1.csv\",     package = \"spicyWorkflow\"   ) )  clinical <- clinical |>   mutate(imageID = paste0(\"Point\", PointNumber, \"_pt\", Patient_ID, \"_\", TMAD_Patient))  clinical$imageID[grep(\"normal\", clinical$Tissue_Type)] <- paste0(clinical$imageID[grep(\"normal\", clinical$Tissue_Type)], \"_Normal\")  clinicalVariables <- c(\"imageID\", \"Patient_ID\", \"Status\", \"Age\", \"SUBTYPE\", \"PAM50\", \"Treatment\", \"DCIS_grade\", \"Necrosis\") rownames(clinical) <- clinical$imageID"},{"path":"/articles/spicyWorkflow.html","id":"put-the-clinical-data-into-the-coldata-of-singlecellexperiment","dir":"Articles","previous_headings":"Load the clinical data","what":"Put the clinical data into the colData of SingleCellExperiment","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"can store clinical information mcols CytoImageList.","code":"# Add the clinical data to mcols of images. mcols(images) <- clinical[names(images), clinicalVariables]"},{"path":"/articles/spicyWorkflow.html","id":"simpleseg-segment-the-cells-in-the-images","dir":"Articles","previous_headings":"","what":"SimpleSeg: Segment the cells in the images","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"simpleSeg R package https://github.com/SydneyBioX/simpleSeg provides series functions generate simple segmentation masks images. functions leverage functionality EBImage package Bioconductor. flexibility performing segmentation R recommend learning use EBimage package. key strength simpleSeg package coded multiple ways perform simple segmentation operations well incorporating multiple automatic procedures optimise key parameters aren’t specified.","code":""},{"path":"/articles/spicyWorkflow.html","id":"run-simpleseg","dir":"Articles","previous_headings":"SimpleSeg: Segment the cells in the images","what":"Run simpleSeg","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"images stored list CytoImageList can segmented simple call simpleSeg(). ask simpleSeg multiple things. First, like use combination principal component analysis channels guided H33 channel summarise nuclei signal images. Secondly, estimate cell body cells simply dilate nuclei 2 pixels. also requested channels square root transformed minimum cell size 40 pixels used size selection step.","code":"# Generate segmentation masks masks <- simpleSeg(   images,   nucleus = c(\"HH3\"),   cellBody = \"dilate\",   transform = \"sqrt\",   sizeSelection = 40,   discSize = 2,   pca = TRUE,   cores = nCores )"},{"path":"/articles/spicyWorkflow.html","id":"visualise-separation","dir":"Articles","previous_headings":"SimpleSeg: Segment the cells in the images","what":"Visualise separation","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"display colorLabels functions EBImage make easy examine performance cell segmentation. great thing display used interactive session easy zoom image.","code":"# Visualise segmentation performance one way. EBImage::display(colorLabels(masks[[1]]))"},{"path":"/articles/spicyWorkflow.html","id":"visualise-outlines","dir":"Articles","previous_headings":"SimpleSeg: Segment the cells in the images","what":"Visualise outlines","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"plotPixels function cytomapper make easy overlay masks top intensities 6 markers. can see segmentation appears performing reasonably.","code":"# Visualise segmentation performance another way. cytomapper::plotPixels(   image = images[1],   mask = masks[1],   img_id = \"imageID\",   colour_by = c(\"PanKRT\", \"GLUT1\", \"HH3\", \"CD3\", \"CD20\"),   display = \"single\",   colour = list(     HH3 = c(\"black\", \"blue\"),     CD3 = c(\"black\", \"purple\"),     CD20 = c(\"black\", \"green\"),     GLUT1 = c(\"black\", \"red\"),     PanKRT = c(\"black\", \"yellow\")   ),   bcg = list(     HH3 = c(0, 1, 1.5),     CD3 = c(0, 1, 1.5),     CD20 = c(0, 1, 1.5),     GLUT1 = c(0, 1, 1.5),     PanKRT = c(0, 1, 1.5)   ),   legend = NULL )"},{"path":"/articles/spicyWorkflow.html","id":"summarise-cell-features-","dir":"Articles","previous_headings":"","what":"Summarise cell features.","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"order characterise phenotypes segmented cells, measureObjects cytomapper calculate average intensity channel within cell well morphological features. channel intensities stored counts assay SingleCellExperiment. Information spatial location cell stored colData m.cx m.cy columns. addition , propagate information store mcols CytoImageList colData resulting SingleCellExperiment.","code":"# Summarise the expression of each marker in each cell cells <- cytomapper::measureObjects(   masks,   images,   img_id = \"imageID\",   BPPARAM = BPPARAM )"},{"path":"/articles/spicyWorkflow.html","id":"normalise-data","dir":"Articles","previous_headings":"","what":"Normalise data","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"check see marker intensities cell require form transformation normalisation. extract intensities counts assay. Looking CK7 expressed majority tumour cells, intensities clearly skewed.  can transform normalise data using normalizeCells function. taken intensities counts assay, performed square root transform, image trimmed 99 quantile min-max scaled 0-1. modified data stored norm assay default. can see normalised data appears bimodal, perfectly, likely sufficient degree clustering.","code":"# Extract marker data and bind with information about images df <- as.data.frame(cbind(colData(cells), t(assay(cells, \"counts\"))))  # Plots densities of CK7 for each image. ggplot(df, aes(x = CK7, colour = imageID)) +   geom_density() +   theme(legend.position = \"none\") # Transform and normalise the marker expression of each cell type. # Use a square root transform, then trimmed the 99 quantile cells <- normalizeCells(cells,   transformation = \"asinh\",   method = c(\"trim99\", \"minMax\", \"PC1\"),   assayIn = \"counts\",   cores = nCores )  # Extract normalised marker information. norm_df <- as.data.frame(cbind(colData(cells), t(assay(cells, \"norm\"))))   # Plots densities of normalised CK7 for each image. ggplot(norm_df, aes(x = CK7, colour = imageID)) +   geom_density() +   theme(legend.position = \"none\")"},{"path":"/articles/spicyWorkflow.html","id":"fusesom-cluster-cells-into-cell-types","dir":"Articles","previous_headings":"","what":"FuseSOM: Cluster cells into cell types","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"FuseSOM R package https://github.com/ecool50/FuseSOM provides pipeline clustering highly multiplexed situ imaging cytometry assays. pipeline uses Self Organising Map architecture coupled Multiview hierarchical clustering provides functions estimation number clusters. cluster using runFuseSOM function. chosen specify subset markers used original manuscript gating cell types. also specified number clusters identify numClusters = 24. addition , FuseSOM can automatically estimate grid size self organising map.","code":""},{"path":"/articles/spicyWorkflow.html","id":"perform-the-clustering","dir":"Articles","previous_headings":"FuseSOM: Cluster cells into cell types","what":"Perform the clustering","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"","code":"# The markers used in the original publication to gate cell types. useMarkers <- c(   \"PanKRT\", \"ECAD\", \"CK7\", \"VIM\", \"FAP\", \"CD31\", \"CK5\", \"SMA\",   \"CD45\", \"CD4\", \"CD3\", \"CD8\", \"CD20\", \"CD68\", \"CD14\", \"CD11c\",   \"HLADRDPDQ\", \"MPO\", \"Tryptase\" )  # Set seed. set.seed(51773)  # Generate SOM and cluster cells into 20 groups. cells <- runFuseSOM(   cells,   markers = useMarkers,   assay = \"norm\",   numClusters = 24 )"},{"path":"/articles/spicyWorkflow.html","id":"attempt-to-interpret-the-phenotype-of-each-cluster","dir":"Articles","previous_headings":"FuseSOM: Cluster cells into cell types","what":"Attempt to interpret the phenotype of each cluster","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"can begin process understanding cell clusters using plotGroupedHeatmap function scater. least, can see capture major immune populations expect see.","code":"# Visualise marker expression in each cluster. scater::plotGroupedHeatmap(   cells,   features = useMarkers,   group = \"clusters\",   exprs_values = \"norm\",   center = TRUE,   scale = TRUE,   zlim = c(-3, 3),   cluster_rows = FALSE )"},{"path":"/articles/spicyWorkflow.html","id":"check-how-many-clusters-should-be-used-","dir":"Articles","previous_headings":"FuseSOM: Cluster cells into cell types","what":"Check how many clusters should be used.","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"can check see reasonable choice 24 clusters using estimateNumCluster optiPlot functions. examine Gap method, others Silhouette Within Cluster Distance also available. can seen , chose second elbow point optimal number clusters.","code":"# Generate metrics for estimating the number of clusters. # As I've already run runFuseSOM I don't need to run generateSOM(). cells <- estimateNumCluster(cells, kSeq = 2:30) optiPlot(cells, method = \"gap\")"},{"path":"/articles/spicyWorkflow.html","id":"check-cluster-frequencies","dir":"Articles","previous_headings":"FuseSOM: Cluster cells into cell types","what":"Check cluster frequencies","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"find always useful check number cells cluster. can see cluster 4 contains lots (likely tumour) cells cluster 16 contains cells.","code":"# Check cluster frequencies. colData(cells)$clusters |>   table() |>   sort() ##  ## cluster_17  cluster_9 cluster_21  cluster_7 cluster_12  cluster_3  cluster_2  ##        205        254        358        593        664        695        711  ## cluster_23 cluster_14  cluster_8 cluster_18 cluster_22 cluster_19 cluster_13  ##        719        840        890       1019       1154       1236       1354  ##  cluster_1 cluster_10 cluster_16 cluster_11 cluster_20 cluster_24 cluster_15  ##       1382       1431       1614       1871       3481       3965       4403  ##  cluster_5  cluster_4  cluster_6  ##       6166       6551      19778"},{"path":"/articles/spicyWorkflow.html","id":"dimension-reduction","dir":"Articles","previous_headings":"FuseSOM: Cluster cells into cell types","what":"Dimension reduction","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"data stored SingleCellExperiment can also use scater perform visualise data lower dimension look cluster differences.","code":"set.seed(51773) # Perform dimension reduction using UMP. cells <- scater::runUMAP(   cells,   subset_row = useMarkers,   exprs_values = \"norm\" )  # Select a subset of images to plot. someImages <- unique(colData(cells)$imageID)[c(1, 10, 20, 40, 50, 60)]   # UMAP by cell type cluster. scater::plotReducedDim(   cells[, colData(cells)$imageID %in% someImages],   dimred = \"UMAP\",   colour_by = \"clusters\" )"},{"path":"/articles/spicyWorkflow.html","id":"test-for-association-between-the-proportion-of-each-cell-type-and-progression-status","dir":"Articles","previous_headings":"","what":"Test For association between the proportion of each cell type and progression status","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"recommend using package diffcyt testing changes abundance cell types. However, colTest function allows us quickly test associations proportions cell types progression status using either Wilcoxon rank sum tests t-tests. see p-value less 0.05, equate small FDR.","code":"# Select cells which belong to individuals with progressor status. cellsToUse <- cells$Status %in% c(\"nonprogressor\", \"progressor\")  # Perform simple wicoxon rank sum tests on the columns of the proportion matrix. testProp <- colTest(cells[, cellsToUse],   condition = \"Status\",   feature = \"clusters\" )  testProp ##            mean in group nonprogressor mean in group progressor      t  pval ## cluster_18                      0.0210                   0.0120  2.500 0.016 ## cluster_15                      0.0780                   0.0590  1.900 0.063 ## cluster_16                      0.0270                   0.0180  1.900 0.070 ## cluster_3                       0.0130                   0.0034  1.800 0.074 ## cluster_19                      0.0230                   0.0190  1.500 0.150 ## cluster_17                      0.0029                   0.0016  1.400 0.170 ## cluster_4                       0.0980                   0.1400 -1.400 0.170 ## cluster_24                      0.0590                   0.0390  1.300 0.190 ## cluster_9                       0.0046                   0.0027  1.300 0.210 ## cluster_5                       0.0960                   0.1300 -1.100 0.270 ## cluster_13                      0.0220                   0.0190  1.100 0.290 ## cluster_10                      0.0210                   0.0280 -0.820 0.420 ## cluster_11                      0.0200                   0.0250 -0.790 0.440 ## cluster_6                       0.3400                   0.3200  0.770 0.450 ## cluster_2                       0.0100                   0.0120 -0.740 0.470 ## cluster_14                      0.0120                   0.0130 -0.520 0.610 ## cluster_12                      0.0110                   0.0120 -0.510 0.620 ## cluster_22                      0.0180                   0.0210 -0.420 0.680 ## cluster_23                      0.0130                   0.0140 -0.420 0.680 ## cluster_7                       0.0093                   0.0130 -0.400 0.690 ## cluster_20                      0.0540                   0.0520  0.280 0.780 ## cluster_8                       0.0140                   0.0150 -0.190 0.850 ## cluster_1                       0.0240                   0.0230  0.140 0.890 ## cluster_21                      0.0066                   0.0065  0.055 0.960 ##            adjPval    cluster ## cluster_18    0.38 cluster_18 ## cluster_15    0.44 cluster_15 ## cluster_16    0.44 cluster_16 ## cluster_3     0.44  cluster_3 ## cluster_19    0.56 cluster_19 ## cluster_17    0.56 cluster_17 ## cluster_4     0.56  cluster_4 ## cluster_24    0.56 cluster_24 ## cluster_9     0.56  cluster_9 ## cluster_5     0.63  cluster_5 ## cluster_13    0.63 cluster_13 ## cluster_10    0.75 cluster_10 ## cluster_11    0.75 cluster_11 ## cluster_6     0.75  cluster_6 ## cluster_2     0.75  cluster_2 ## cluster_14    0.83 cluster_14 ## cluster_12    0.83 cluster_12 ## cluster_22    0.83 cluster_22 ## cluster_23    0.83 cluster_23 ## cluster_7     0.83  cluster_7 ## cluster_20    0.89 cluster_20 ## cluster_8     0.93  cluster_8 ## cluster_1     0.93  cluster_1 ## cluster_21    0.96 cluster_21 imagesToUse <- rownames(clinical)[clinical[, \"Status\"] %in% c(\"nonprogressor\", \"progressor\")]  prop <- getProp(cells, feature = \"clusters\") clusterToUse <- rownames(testProp)[1]  boxplot(prop[imagesToUse, clusterToUse] ~ clinical[imagesToUse, \"Status\"])"},{"path":"/articles/spicyWorkflow.html","id":"spicyr-test-spatial-relationships","dir":"Articles","previous_headings":"","what":"spicyR: test spatial relationships","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"spicyR package (https://www.bioconductor.org/packages/devel/bioc/html/spicyR.html)[https://www.bioconductor.org/packages/devel/bioc/html/spicyR.html] provides series functions aid analysis immunofluorescence mass cytometry imaging data well assays can deeply phenotype individual cells spatial location. use spicy function test changes spatial relationships pair-wise combinations cells. quantify spatial relationships using combination three radii Rs = c(20, 50, 100) mildly account global tissue structure using sigma = 50. can visualise tests using signifPlot observe cell type pairs appear become less attractive (avoid ) progression sample.","code":"# Test for changes in pair-wise spatial relationships between cell types. spicyTest <- spicy(   cells[, cellsToUse],   condition = \"Status\",   cellType = \"clusters\",   imageID = \"imageID\",   spatialCoords = c(\"m.cx\", \"m.cy\"),   Rs = c(20, 50, 100),   sigma = 50,   BPPARAM = BPPARAM )  topPairs(spicyTest, n = 10) ##                          intercept coefficient     p.value adj.pvalue ## cluster_9__cluster_21  -114.962528   243.01532 0.001061505  0.3131976 ## cluster_21__cluster_9  -114.039961   238.67211 0.001519455  0.3131976 ## cluster_10__cluster_11  -97.300723    91.72319 0.001739253  0.3131976 ## cluster_20__cluster_15    1.381275    44.36284 0.002661354  0.3131976 ## cluster_15__cluster_23   33.123975    80.55381 0.002718729  0.3131976 ## cluster_11__cluster_10  -91.995699    82.85717 0.004711349  0.3514033 ## cluster_11__cluster_11  123.810238   173.86550 0.005250569  0.3514033 ## cluster_23__cluster_15   36.773523    80.07047 0.005467489  0.3514033 ## cluster_15__cluster_20   -2.489198    39.95061 0.005490676  0.3514033 ## cluster_11__cluster_22   -2.818209   -99.24727 0.007230443  0.4085725 ##                              from         to ## cluster_9__cluster_21   cluster_9 cluster_21 ## cluster_21__cluster_9  cluster_21  cluster_9 ## cluster_10__cluster_11 cluster_10 cluster_11 ## cluster_20__cluster_15 cluster_20 cluster_15 ## cluster_15__cluster_23 cluster_15 cluster_23 ## cluster_11__cluster_10 cluster_11 cluster_10 ## cluster_11__cluster_11 cluster_11 cluster_11 ## cluster_23__cluster_15 cluster_23 cluster_15 ## cluster_15__cluster_20 cluster_15 cluster_20 ## cluster_11__cluster_22 cluster_11 cluster_22 # Visualise which relationships are changing the most. signifPlot(   spicyTest,   breaks = c(-1.5, 3, 0.5) )"},{"path":"/articles/spicyWorkflow.html","id":"lisaclust-find-cellular-neighbourhoods","dir":"Articles","previous_headings":"","what":"lisaClust: Find cellular neighbourhoods","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"lisaClust package (https://www.bioconductor.org/packages/devel/bioc/html/lisaClust.html)[https://www.bioconductor.org/packages/devel/bioc/html/lisaClust.html] provides series functions identify visualise regions tissue spatial associations cell-types similar. package can used provide high-level summary cell-type co-localisation multiplexed imaging data segmented single-cell resolution. use lisaClust function clusters cells 5 regions distinct spatial ordering.","code":"set.seed(51773)  # Cluster cells into spatial regions with similar composition. cells <- lisaClust(   cells,   k = 5,   Rs = c(20, 50, 100),   sigma = 50,   spatialCoords = c(\"m.cx\", \"m.cy\"),   cellType = \"clusters\",   BPPARAM = BPPARAM )"},{"path":"/articles/spicyWorkflow.html","id":"region---cell-type-enrichment-heatmap","dir":"Articles","previous_headings":"lisaClust: Find cellular neighbourhoods","what":"Region - cell type enrichment heatmap","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"can try interpret spatial orderings regions quantifying using regionMap function. plots frequency cell type region relative expect chance.","code":"# Visualise the enrichment of each cell type in each region regionMap(cells, cellType = \"clusters\", limit = c(0.2, 5))"},{"path":"/articles/spicyWorkflow.html","id":"visualise-regions","dir":"Articles","previous_headings":"lisaClust: Find cellular neighbourhoods","what":"Visualise regions","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"default, identified regions stored regions column colData object. can quickly examine spatial arrangement regions using ggplot.  much slower, also implemented function overlaying region information hatching pattern information can viewed simultaneously cell type calls. plot ggplot object scale can modified scale_region_manual.","code":"# Extract cell information and filter to specific image. df <- colData(cells) |>   as.data.frame() |>   filter(imageID == \"Point2206_pt1116_31620\")  # Colour cells by their region. ggplot(df, aes(x = m.cx, y = m.cy, colour = region)) +   geom_point() # Use hatching to visualise regions and cell types. hatchingPlot(   cells,   useImages = \"Point2206_pt1116_31620\",   cellType = \"clusters\",   spatialCoords = c(\"m.cx\", \"m.cy\") ) # Use hatching to visualise regions and cell types. # Relabel the hatching of the regions. hatchingPlot(   cells,   useImages = \"Point2206_pt1116_31620\",   cellType = \"clusters\",   spatialCoords = c(\"m.cx\", \"m.cy\"),   window = \"square\",   nbp = 300,   line.spacing = 41 ) +    scale_region_manual(values = c(     region_1 = 2,     region_2 = 1,     region_3 = 5,     region_4 = 4,     region_5 = 3   )) +    guides(colour = guide_legend(ncol = 2))"},{"path":"/articles/spicyWorkflow.html","id":"test-for-association-with-progression","dir":"Articles","previous_headings":"lisaClust: Find cellular neighbourhoods","what":"Test for association with progression","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"needed, can quickly use colTest function test associations proportions cells region progression status using either Wilcoxon rank sum tests t-tests. see adjusted p-value less 0.05.","code":"# Test if the proportion of each region is associated # with progression status. testRegion <- colTest(   cells[, cellsToUse],   feature = \"region\",   condition = \"Status\" )  testRegion ##          mean in group nonprogressor mean in group progressor     t pval ## region_3                       0.330                    0.290  1.60 0.11 ## region_4                       0.290                    0.250  1.70 0.11 ## region_5                       0.120                    0.170 -1.70 0.11 ## region_2                       0.180                    0.220 -1.50 0.15 ## region_1                       0.082                    0.081  0.03 0.98 ##          adjPval  cluster ## region_3    0.18 region_3 ## region_4    0.18 region_4 ## region_5    0.18 region_5 ## region_2    0.19 region_2 ## region_1    0.98 region_1"},{"path":"/articles/spicyWorkflow.html","id":"classifyr-classification","dir":"Articles","previous_headings":"","what":"ClassifyR: Classification","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"ClassifyR package, https://github.com/SydneyBioX/ClassifyR, formalises convenient framework evaluating classification R. provide functionality easily include four key modelling stages; Data transformation, feature selection, classifier training prediction; cross-validation loop. use crossValidate function perform 100 repeats 5-fold cross-validation evaluate performance elastic net model applied three quantification MIBI-TOF data; cell type proportions, average mean cell type region proportions.","code":"# Create list to store data.frames data <- list()  # Add proportions of each cell type in each image data[[\"props\"]] <- getProp(cells, \"clusters\")  # Add pair-wise associations data[[\"dist\"]] <- getPairwise(   cells,   spatialCoords = c(\"m.cx\", \"m.cy\"),   cellType = \"clusters\",   Rs = c(20, 50, 100),   sigma = 50,   BPPARAM = BPPARAM ) data[[\"dist\"]] <- as.data.frame(data[[\"dist\"]])   # Add proportions of each region in each image # to the list of dataframes. data[[\"regions\"]] <- getProp(cells, \"region\")  # Subset data images with progression status and NA clinical variables. measurements <- lapply(data, function(x) x[imagesToUse, ])  # Set seed set.seed(51773)  # Perform cross-validation of an elastic net model # with 100 repeats of 5-fold cross-validation. cv <- crossValidate(   measurements = measurements,   outcome = clinical[imagesToUse, \"Status\"],   classifier = \"GLM\",   nFolds = 5,   nRepeats = 100,   nCores = nCores )"},{"path":"/articles/spicyWorkflow.html","id":"visualise-cross-validated-prediction-performance","dir":"Articles","previous_headings":"ClassifyR: Classification","what":"Visualise cross-validated prediction performance","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"use performancePlot function assess AUC repeat 5-fold cross-validation. see lisaClust regions appear capture information predictive progression status patients.","code":"# Calculate AUC for each cross-validation repeat and plot. performancePlot(   cv,   metric = \"AUC\",   characteristicsList = list(x = \"Assay Name\") )"},{"path":"/articles/spicyWorkflow.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"used pipeline spatial analysis R packages demonstrate easy way segment, cluster, normalise, quantify classify high dimensional situ cytometry data within R.","code":""},{"path":"/articles/spicyWorkflow.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo","title":"Performing a spatial analysis of multiplexed tissue imaging data.","text":"","code":"sessionInfo() ## R version 4.3.0 alpha (2023-03-29 r84123) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Debian GNU/Linux 11 (bullseye) ##  ## Matrix products: default ## BLAS:   /dora/nobackup/biostat/software/R-devel/lib/libRblas.so  ## LAPACK: /dora/nobackup/biostat/software/R-devel/lib/libRlapack.so;  LAPACK version 3.11.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: Australia/Sydney ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] lisaClust_1.7.3             ClassifyR_3.3.25            ##  [3] survival_3.5-5              BiocParallel_1.33.12        ##  [5] MultiAssayExperiment_1.25.9 generics_0.1.3              ##  [7] spicyR_1.11.6               scater_1.27.8               ##  [9] scuttle_1.9.4               ggpubr_0.6.0                ## [11] FuseSOM_1.1.3               simpleSeg_1.1.1             ## [13] ggplot2_3.4.2               dplyr_1.1.1                 ## [15] cytomapper_1.11.2           SingleCellExperiment_1.21.1 ## [17] SummarizedExperiment_1.29.1 Biobase_2.59.0              ## [19] GenomicRanges_1.51.4        GenomeInfoDb_1.35.16        ## [21] IRanges_2.33.1              S4Vectors_0.37.5            ## [23] BiocGenerics_0.45.3         MatrixGenerics_1.11.1       ## [25] matrixStats_0.63.0          EBImage_4.41.2              ## [27] BiocStyle_2.27.1            ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.1                  spatstat.sparse_3.0-1     ##   [3] bitops_1.0-7              httr_1.4.5                ##   [5] RColorBrewer_1.1-3        prabclus_2.3-2            ##   [7] DataVisualizations_1.2.3  numDeriv_2016.8-1.1       ##   [9] tools_4.3.0               backports_1.4.1           ##  [11] utf8_1.2.3                R6_2.5.1                  ##  [13] vegan_2.6-4               HDF5Array_1.27.0          ##  [15] uwot_0.1.14               mgcv_1.8-42               ##  [17] rhdf5filters_1.11.2       permute_0.9-7             ##  [19] withr_2.5.0               sp_1.6-0                  ##  [21] analogue_0.17-6           gridExtra_2.3             ##  [23] cli_3.6.1                 textshaping_0.3.6         ##  [25] spatstat.explore_3.1-0    profileModel_0.6.1        ##  [27] labeling_0.4.2            sass_0.4.5                ##  [29] diptest_0.76-0            robustbase_0.95-1         ##  [31] brglm_0.7.2               nnls_1.4                  ##  [33] spatstat.data_3.0-1       genefilter_1.81.3         ##  [35] proxy_0.4-27              pkgdown_2.0.7             ##  [37] systemfonts_1.0.4         yulab.utils_0.0.6         ##  [39] svglite_2.1.1             R.utils_2.12.2            ##  [41] limma_3.55.7              RSQLite_2.3.1             ##  [43] gridGraphics_0.5-1        spatstat.random_3.1-4     ##  [45] car_3.1-2                 scam_1.2-13               ##  [47] Matrix_1.5-4              ggbeeswarm_0.7.1          ##  [49] fansi_1.0.4               abind_1.4-5               ##  [51] R.methodsS3_1.8.2         terra_1.7-23              ##  [53] lifecycle_1.0.3           yaml_2.3.7                ##  [55] edgeR_3.41.6              carData_3.0-5             ##  [57] rhdf5_2.43.4              blob_1.2.4                ##  [59] grid_4.3.0                promises_1.2.0.1          ##  [61] dqrng_0.3.0               crayon_1.5.2              ##  [63] shinydashboard_0.7.2      lattice_0.21-8            ##  [65] cowplot_1.1.1             beachmat_2.15.2           ##  [67] annotate_1.77.0           KEGGREST_1.39.0           ##  [69] magick_2.7.4              pillar_1.9.0              ##  [71] knitr_1.42                rjson_0.2.21              ##  [73] boot_1.3-28.1             fpc_2.2-10                ##  [75] codetools_0.2-19          glue_1.6.2                ##  [77] FCPS_1.3.1                data.table_1.14.8         ##  [79] vctrs_0.6.1               png_0.1-8                 ##  [81] gtable_0.3.3              kernlab_0.9-32            ##  [83] cachem_1.0.7              xfun_0.38                 ##  [85] princurve_2.1.6           mime_0.12                 ##  [87] DropletUtils_1.19.3       coop_0.6-3                ##  [89] pheatmap_1.0.12           ellipsis_0.3.2            ##  [91] nlme_3.1-162              bit64_4.0.5               ##  [93] RcppAnnoy_0.0.20          rprojroot_2.0.3           ##  [95] bslib_0.4.2               irlba_2.3.5.1             ##  [97] svgPanZoom_0.3.4          vipor_0.4.5               ##  [99] DBI_1.1.3                 colorspace_2.1-0          ## [101] nnet_7.3-18               raster_3.6-20             ## [103] mnormt_2.1.1              tidyselect_1.2.0          ## [105] bit_4.0.5                 compiler_4.3.0            ## [107] BiocNeighbors_1.17.1      desc_1.4.2                ## [109] DelayedArray_0.25.0       bookdown_0.33             ## [111] scales_1.2.1              DEoptimR_1.0-12           ## [113] psych_2.3.3               tiff_0.1-11               ## [115] stringr_1.5.0             SpatialExperiment_1.9.5   ## [117] digest_0.6.31             goftest_1.2-3             ## [119] fftwtools_0.9-11          spatstat.utils_3.0-2      ## [121] minqa_1.2.5               rmarkdown_2.21            ## [123] XVector_0.39.0            htmltools_0.5.5           ## [125] pkgconfig_2.0.3           jpeg_0.1-10               ## [127] lme4_1.1-32               sparseMatrixStats_1.11.1  ## [129] highr_0.10                fastmap_1.1.1             ## [131] rlang_1.1.0               htmlwidgets_1.6.2         ## [133] shiny_1.7.4               DelayedMatrixStats_1.21.0 ## [135] farver_2.1.1              jquerylib_0.1.4           ## [137] jsonlite_1.8.4            mclust_6.0.0              ## [139] R.oo_1.25.0               BiocSingular_1.15.0       ## [141] RCurl_1.98-1.12           magrittr_2.0.3            ## [143] modeltools_0.2-23         GenomeInfoDbData_1.2.10   ## [145] ggplotify_0.1.0           Rhdf5lib_1.21.0           ## [147] munsell_0.5.0             Rcpp_1.0.10               ## [149] viridis_0.6.2             stringi_1.7.12            ## [151] zlibbioc_1.45.0           MASS_7.3-58.4             ## [153] flexmix_2.3-19            plyr_1.8.8                ## [155] parallel_4.3.0            ggrepel_0.9.3             ## [157] deldir_1.0-6              Biostrings_2.67.2         ## [159] splines_4.3.0             tensor_1.5                ## [161] locfit_1.5-9.7            fastcluster_1.2.3         ## [163] spatstat.geom_3.1-0       ggsignif_0.6.4            ## [165] reshape2_1.4.4            ScaledMatrix_1.7.0        ## [167] XML_3.99-0.14             evaluate_0.20             ## [169] BiocManager_1.30.20       nloptr_2.0.3              ## [171] tweenr_2.0.2              httpuv_1.6.9              ## [173] tidyr_1.3.0               purrr_1.0.1               ## [175] polyclip_1.10-4           ggforce_0.4.1             ## [177] rsvd_1.0.5                broom_1.0.4               ## [179] xtable_1.8-4              rstatix_0.7.2             ## [181] later_1.3.0               viridisLite_0.4.1         ## [183] class_7.3-21              ragg_1.2.5                ## [185] tibble_3.2.1              lmerTest_3.1-3            ## [187] AnnotationDbi_1.61.2      memoise_2.0.1             ## [189] beeswarm_0.4.0            cluster_2.1.4             ## [191] concaveman_1.1.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Nicholls. Author. Nicholas Robertson. Author. Nicolas Canete. Author. Elijah Willie. Author. Ellis Patrick. Author. SOMS Maintainer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nicholls , Robertson N, Canete N, Willie E, Patrick E, Maintainer S (2023). spicyWorkflow: Performing Spatial Analysis Multiplexed Tissue Imaging Data. R package version 0.99.4, https://github.com/SydneyBioX/spicyWorkflow.","code":"@Manual{,   title = {spicyWorkflow: Performing a Spatial Analysis of Multiplexed Tissue Imaging Data},   author = {Alexander Nicholls and Nicholas Robertson and Nicolas Canete and Elijah Willie and Ellis Patrick and SOMS Maintainer},   year = {2023},   note = {R package version 0.99.4},   url = {https://github.com/SydneyBioX/spicyWorkflow}, }"},{"path":"/index.html","id":"spicyworkflow","dir":"","previous_headings":"","what":"Performing a Spatial Analysis of Multiplexed Tissue Imaging Data","title":"Performing a Spatial Analysis of Multiplexed Tissue Imaging Data","text":"spicyWorkflow provides overview use spicy workflow performing analysis highly multiplexed situ imaging cytometry assays IMC, CODEX MIBI-TOF.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Performing a Spatial Analysis of Multiplexed Tissue Imaging Data","text":"spicyWorkflow can installed GitHub follows.","code":"# install.packages(\"devtools\") devtools::install_github(\"SydneyBioX/spicyWorkflow\")"},{"path":"/review.html","id":null,"dir":"","previous_headings":"","what":"Package ‘spicyWorkflow’ Review","title":"Package ‘spicyWorkflow’ Review","text":"Thank submition package Bioconductor. package passed check build. build vignettes, system got crashed restarted. system macOS Big Sur M1 chip. don’t think acceptable. Please try fix issue answer following comments line line ready second review. Code: Note: please condsider; Important: must addressed.","code":""},{"path":"/review.html","id":"the-description-file","dir":"","previous_headings":"","what":"The DESCRIPTION file","title":"Package ‘spicyWorkflow’ Review","text":"least 3 sentences Description field required. update R required version 4.3.0 NOTE: Consider adding maintainer’s ORCID iD ‘Authors@R’ ‘comment=c(ORCID=“…”)’","code":""},{"path":"/review.html","id":"r-code","dir":"","previous_headings":"","what":"R code:","title":"Package ‘spicyWorkflow’ Review","text":"Important: fix hard coding: * rmd file vignettes/spicyWorkflow.Rmd - line 111: pathToImages <- “../inst/extdata/images” # suggest ?system.file - line 128: dir.create(“../inst/extdata/h5Files”) # change tmp file - line 132: h5FilesPath = “../inst/extdata/h5Files”, - line 147: clinical <- read.csv(“../inst/extdata/1-s2.0-S0092867421014860-mmc1.csv”) Important: Use vapply replace sapply * rmd file vignettes/spicyWorkflow.Rmd - line 118: files <- sapply(imageDirs, list.files, pattern = “tif”, full.names = TRUE, simplify = FALSE) Auto detect available cores minimize used cores vignette * rmd file vignettes/spicyWorkflow.Rmd - line 91: nCores <- 5","code":""},{"path":"/review.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Package ‘spicyWorkflow’ Review","text":"rmd file vignettes/spicyWorkflow.Rmd rmd file vignettes/spicyWorkflow.Rmd Important: Cause system crash build vignettes/spicyWorkflow.Rmd. Important: move docs folder _pkgdown.yml separate branch like gh-pages.","code":""}]
